// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.Data;

namespace Repositories.Migrations
{
    [DbContext(typeof(ShlidexperienceContext))]
    [Migration("20201204072456_DbSeeded")]
    partial class DbSeeded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repositories.Data.CycleEmployeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CycleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CycleId");

                    b.HasIndex("UserId");

                    b.ToTable("CycleEmployees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("14e14201-7631-4d1a-a2f6-744622abe695"),
                            CycleId = new Guid("b3f6717d-7479-4019-b6d5-060b12787652"),
                            UserId = new Guid("7dee2681-8c8f-452b-9e65-6dbf80989ae8")
                        },
                        new
                        {
                            Id = new Guid("b5e668ad-dec5-4f69-ad40-428615aa616a"),
                            CycleId = new Guid("b3f6717d-7479-4019-b6d5-060b12787652"),
                            UserId = new Guid("ad3e8f84-68b5-4b19-a038-7df592bdb02c")
                        },
                        new
                        {
                            Id = new Guid("9ca1d954-b0e7-4550-9c31-a3e5e8df9915"),
                            CycleId = new Guid("b3f6717d-7479-4019-b6d5-060b12787652"),
                            UserId = new Guid("e3e4187e-3cda-45bd-a8a3-8ea1800c92db")
                        },
                        new
                        {
                            Id = new Guid("cb068945-2793-4689-9291-4bafbd21d631"),
                            CycleId = new Guid("b3f6717d-7479-4019-b6d5-060b12787652"),
                            UserId = new Guid("cb7ff5c5-3d33-4c58-88f8-f737ac56b5a0")
                        },
                        new
                        {
                            Id = new Guid("3ec5d09e-3e21-467d-b784-63e802419ca5"),
                            CycleId = new Guid("b3f6717d-7479-4019-b6d5-060b12787652"),
                            UserId = new Guid("a2de8e3c-95ce-4f06-8925-c5a4db998c83")
                        },
                        new
                        {
                            Id = new Guid("ef1460a1-fa3c-461c-9e13-58534ce3e24f"),
                            CycleId = new Guid("b3f633c6-fa6c-47a9-9ffa-e749fa3b77bb"),
                            UserId = new Guid("3dd712af-7292-4d7f-beb6-278a3d8b7c7e")
                        },
                        new
                        {
                            Id = new Guid("5c98ea2d-63b4-4f49-be75-0c16c7d4fd1c"),
                            CycleId = new Guid("b3f633c6-fa6c-47a9-9ffa-e749fa3b77bb"),
                            UserId = new Guid("ef8eb889-0473-4be8-a75a-fbcfafca0260")
                        },
                        new
                        {
                            Id = new Guid("b5d43481-5c49-4576-a527-20744ef48913"),
                            CycleId = new Guid("b3f633c6-fa6c-47a9-9ffa-e749fa3b77bb"),
                            UserId = new Guid("ad3e8f84-68b5-4b19-a038-7df592bdb02c")
                        },
                        new
                        {
                            Id = new Guid("2c10bae4-5d5f-45d9-bd7c-68e8a3c6d859"),
                            CycleId = new Guid("3882eaa8-647d-4cef-863b-f8aa0ae04b49"),
                            UserId = new Guid("e3e4187e-3cda-45bd-a8a3-8ea1800c92db")
                        },
                        new
                        {
                            Id = new Guid("28e4a5b7-104d-47dc-97a6-8d35f8e3e4ca"),
                            CycleId = new Guid("3882eaa8-647d-4cef-863b-f8aa0ae04b49"),
                            UserId = new Guid("3dd712af-7292-4d7f-beb6-278a3d8b7c7e")
                        },
                        new
                        {
                            Id = new Guid("4ef170e4-eb06-4253-9cd3-7783df16c81e"),
                            CycleId = new Guid("3882eaa8-647d-4cef-863b-f8aa0ae04b49"),
                            UserId = new Guid("a2de8e3c-95ce-4f06-8925-c5a4db998c83")
                        });
                });

            modelBuilder.Entity("Repositories.Data.CycleEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Cycle");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3f6717d-7479-4019-b6d5-060b12787652"),
                            Name = "name-0"
                        },
                        new
                        {
                            Id = new Guid("b3f633c6-fa6c-47a9-9ffa-e749fa3b77bb"),
                            Name = "name-1"
                        },
                        new
                        {
                            Id = new Guid("3882eaa8-647d-4cef-863b-f8aa0ae04b49"),
                            Name = "name-2"
                        },
                        new
                        {
                            Id = new Guid("654669a6-db39-4c02-95d9-caa4578cf715"),
                            Name = "name-3"
                        },
                        new
                        {
                            Id = new Guid("963110e4-a6f1-4811-bc0f-91eee0a7d459"),
                            Name = "name-4"
                        },
                        new
                        {
                            Id = new Guid("d01c5646-add0-49e8-94eb-5c730ab27445"),
                            Name = "name-5"
                        },
                        new
                        {
                            Id = new Guid("b0db237f-0805-40bc-9c89-a059c4c9a2bf"),
                            Name = "name-6"
                        },
                        new
                        {
                            Id = new Guid("2a3ff6a1-f3d8-4944-8b22-6f9391796cf8"),
                            Name = "name-7"
                        },
                        new
                        {
                            Id = new Guid("e09ec1f3-7732-413d-b408-b1aca190a9cc"),
                            Name = "name-8"
                        },
                        new
                        {
                            Id = new Guid("8bde7b32-fa03-45ee-ad73-5c470d29dd1d"),
                            Name = "name-9"
                        });
                });

            modelBuilder.Entity("Repositories.Data.UserEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = new Guid("7dee2681-8c8f-452b-9e65-6dbf80989ae8"),
                            Email = "0@gmail.com",
                            IsDeleted = true
                        },
                        new
                        {
                            UserId = new Guid("ad3e8f84-68b5-4b19-a038-7df592bdb02c"),
                            Email = "1@gmail.com",
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("e3e4187e-3cda-45bd-a8a3-8ea1800c92db"),
                            Email = "2@gmail.com",
                            IsDeleted = true
                        },
                        new
                        {
                            UserId = new Guid("cb7ff5c5-3d33-4c58-88f8-f737ac56b5a0"),
                            Email = "3@gmail.com",
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("a2de8e3c-95ce-4f06-8925-c5a4db998c83"),
                            Email = "4@gmail.com",
                            IsDeleted = true
                        },
                        new
                        {
                            UserId = new Guid("1b363cdc-a52e-4709-a282-ab5c58ea5ae2"),
                            Email = "5@gmail.com",
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("3dd712af-7292-4d7f-beb6-278a3d8b7c7e"),
                            Email = "6@gmail.com",
                            IsDeleted = true
                        },
                        new
                        {
                            UserId = new Guid("ef8eb889-0473-4be8-a75a-fbcfafca0260"),
                            Email = "7@gmail.com",
                            IsDeleted = false
                        },
                        new
                        {
                            UserId = new Guid("4bf1eb57-ddd9-472c-a33e-0ba3330d13e1"),
                            Email = "8@gmail.com",
                            IsDeleted = true
                        },
                        new
                        {
                            UserId = new Guid("31a1dabb-5587-4e5b-94c5-b08e9a963d31"),
                            Email = "9@gmail.com",
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("Repositories.Data.CycleEmployeeEntity", b =>
                {
                    b.HasOne("Repositories.Data.CycleEntity", "Cycle")
                        .WithMany("Employees")
                        .HasForeignKey("CycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Repositories.Data.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
